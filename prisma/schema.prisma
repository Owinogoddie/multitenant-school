generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
model User {
  id             String    @id @default(cuid())
  email          String    @unique
  hashedPassword String
  name           String?
  role           UserRole  @default(USER)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  school         School?   @relation(fields: [schoolId], references: [id])
  schoolId       String?
  sessions       Session[]
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model School {
  id          String   @id @default(cuid())
  name        String
  domain      String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
  subscription Subscription?
}
model Plan {
  id           String         @id @default(cuid())
  name         String
  description  String
  price        Float
  duration     Int            // Duration in days
  features     String[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  subscriptions Subscription[]
}
model Subscription {
  id        String   @id @default(cuid())
  schoolId  String   @unique
  school    School   @relation(fields: [schoolId], references: [id])
  planId    String
  plan      Plan     @relation(fields: [planId], references: [id])
  status    SubscriptionStatus
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
  SUPERADMIN
}
enum SubscriptionStatus {
  ACTIVE
  EXPIRED
  CANCELLED
}